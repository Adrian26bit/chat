<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>172, 17</value>
  </metadata>
  <metadata name="contextMenuStrip3.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>327, 17</value>
  </metadata>
  <metadata name="contextMenuStrip4.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>482, 17</value>
  </metadata>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="contextMenuStrip5.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>637, 17</value>
  </metadata>
  <data name="label8.Text" xml:space="preserve">
    <value>/all &lt;text&gt;  -&gt;  send a message to all rooms
/all &lt;/me text&gt;  -&gt;  send an emote message to all rooms
/cpu  -&gt;  send your cpu type to current room
/ram  -&gt;  send your memory size to current room
/os  -&gt;  send your windows version to current room
/time  -&gt;  send a timestamp to current room
/uptime  -&gt; send your computer uptime to current room
/lag  -&gt;  perform lag test
/np  -&gt;  send your song information to current room
/find &lt;user&gt;  -&gt;  make userlist scroll to a user
/color &lt;code&gt;  -&gt;  add colors to the start of your text
/color  -&gt;  remove auto color
/closetabs  -&gt;  close all pms in all rooms</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        U3FrQNfQ/wAAAABJRU5ErkJggg==
</value>
  </data>
</root>